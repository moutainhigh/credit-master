<?xml version="1.0" encoding="UTF-8"?>
<!-- 单点登陆配置 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!-- 开启Security 注解 -->
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/views/error/*" security="none" />
	<security:http pattern="/frameWork/sessionTimeOut" security="none" />
	<security:http pattern="/core/**" security="none" />
	<security:http pattern="/offer/tppback/realtimeDeductBack" security="none" />
	<security:http pattern="/offer/tppback/realtimeDeductBack20" security="none" />
	<security:http pattern="/system/user/forgetPwd" security="none" />
	<security:http pattern="/system/user/resetPwd" security="none" />
	<security:http pattern="/system/user/loginOut" security="none" />
	<security:http pattern="/businessAccount/updateBusinessAccountStatus" security="none" />
	<security:http pattern="/frameWork/systemCheck" security="none" />
	<security:http pattern="/loan/getLoanByPhone" security="none" />
	<security:http pattern="/app/**" security="none" />
	<security:http pattern="/gateway/**" security="none" />
	<security:http pattern="/signValid/**" security="none" />
	<security:http pattern="/lufax/**" security="none" />
	<security:http pattern="/loanTransfer/updateLoanEvaluateSign" security="none" />
	<security:http pattern="/bhTrustCommon/uploadRepayStateDetail" security="none" />
	<!-- entry-point-ref="casEntryPoint" -->
	<security:http  auto-config="false" use-expressions="true"   entry-point-ref="casEntryPoint"  >
		
		<security:intercept-url pattern="/**"   access="isAuthenticated()"/>
		
		<security:custom-filter  before="SESSION_MANAGEMENT_FILTER" ref="sessionManagementFilter"  />
		<security:custom-filter  position="CAS_FILTER" ref="casFilter"  />
		<security:custom-filter  before="LOGOUT_FILTER" ref="requestSingleLogoutFilter"  />
		<security:custom-filter  before="CAS_FILTER" ref="singleLogoutFilter"  />
		<security:custom-filter  before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter"  />
		
		<!-- 
		<security:form-login
				login-page="/system/user/jumpLogin" 
				authentication-failure-url="/auth/login?error=true" 
				default-target-url="/main/common"/>
		 -->
		<security:session-management>
			<security:concurrency-control error-if-maximum-exceeded="false" max-sessions="1" expired-url="${Cas.Service.Login.Url}"/>
		</security:session-management>
		
		
		<!-- 
		<security:logout  
				invalidate-session="true" 
				logout-success-url="/auth/login" 
				logout-url="/auth/logout"/>
			  -->
		
		<security:access-denied-handler ref="accessDeniedHandlerImpl" />
	</security:http>
    
	<bean id="accessDeniedHandlerImpl"  
    			class="com.zdmoney.credit.login.core.AccessDeniedHandlerImpl">
    	<property name="deniedUrl" value="/views/error/403.jsp"/>
    </bean>
	
	<!-- 单点认证成功回调 -->
	<bean id="loginAuthenticationSuccessHandler"  
    			class="com.zdmoney.credit.login.core.LoginAuthenticationSuccessHandler">
    	<property name="alwaysUseDefaultTargetUrl" value="false"/>
    	<property name="defaultTargetUrl" value="/"/>
    </bean>
    
    <!-- 单点认证失败回调 -->
    <bean id="loginAuthenticationFailureHandler"  
    			class="com.zdmoney.credit.login.core.LoginAuthenticationFailureHandler"/>
    
    <bean id="securityFilter"  
    		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    	<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager"  
				ref="affirmativeBasedAccessDecisionManager" />
		<property name="securityMetadataSource" ref="customSecurityMetadataSource"/>  
	</bean>  
	
	<bean id="affirmativeBasedAccessDecisionManager"  
        class="org.springframework.security.access.vote.AffirmativeBased">
         <property name="decisionVoters">
         	<list>
         		<bean class="com.zdmoney.credit.login.core.RoleVoterImpl"/>
         		<bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
         	</list>
         </property>
    </bean>
    
    <bean id="sysInvocationSecurityMetadataSource" class="com.zdmoney.credit.login.core.SysInvocationSecurityMetadataSource"/>

	<bean id="customSecurityMetadataSource"  
        class="org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource">
        <constructor-arg type="java.util.LinkedHashMap" ref="sysInvocationSecurityMetadataSource" />
	</bean>  
	
	<!-- 注销客户端 -->  
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />  
    <!-- 注销服务器端 -->  
    <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <constructor-arg value="${Cas.Service.Login.Url}/logout?service=${Cas.Local.Url}" />  
        <constructor-arg>  
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>  
        </constructor-arg>  
        <property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />  
    </bean>   
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="casAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="casEntryPoint" class="com.zdmoney.credit.login.core.CasAuthenticationEntryPointExt">
		<property name="loginUrl" value="${Cas.Service.Login.Url}"/>
		<property name="serviceProperties" ref="casServiceProperties"/>
	</bean>
	
	<bean id="casServiceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="${Cas.Local.Url}/j_spring_cas_security_check"/>
		<property name="sendRenew" value="false"/>
	</bean>
	
	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="serviceProperties" ref="casServiceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${Cas.Service.Validate.Url}" />
			</bean>
		</property>
		<property name="key" value="id_for_this_auth_provider_only"/>
		<property name="authenticationUserDetailsService" ref="loginAuthentication"/>
	</bean>
	
	<bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="loginAuthenticationSuccessHandler"/>
		<property name="authenticationFailureHandler" ref="loginAuthenticationFailureHandler"/>
	</bean>
	
	<!-- 控制会话超时自定义逻辑处理 -->
	<bean id="sessionTimeOutHandle"
			class="com.zdmoney.credit.login.core.SessionTimeOutHandle">
		<property name="createNewSession" value="true"/>
	</bean>
	
	<bean id="securityContextRepository"
			class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
		<property name="allowSessionCreation" value="true"/>
	</bean>
	
	<bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
		<constructor-arg ref="securityContextRepository"/>
		<property name="invalidSessionStrategy" ref="sessionTimeOutHandle" />
	</bean>
	<!-- 控制会话超时自定义逻辑处理 -->
	
</beans>
