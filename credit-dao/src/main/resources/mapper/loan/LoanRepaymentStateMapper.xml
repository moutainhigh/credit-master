<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdmoney.credit.loan.domain.LoanRepaymentStateMapper" >
  <resultMap id="BaseResultMap" type="com.zdmoney.credit.loan.domain.LoanRepaymentState" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="LOAN_ID" property="loanId" jdbcType="DECIMAL" />
    <result column="REPORT_MONTH" property="reportMonth" jdbcType="VARCHAR" />
    <result column="REPORT_TERM" property="reportTerm" jdbcType="DECIMAL" />
    <result column="CURRENT_TERM" property="currentTerm" jdbcType="DECIMAL" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATOR" property="updator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, LOAN_ID, REPORT_MONTH, REPORT_TERM, CURRENT_TERM, STATE, MEMO, CREATE_TIME, CREATOR, 
    UPDATE_TIME, UPDATOR
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from LOAN_REPAYMENT_STATE
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from LOAN_REPAYMENT_STATE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.zdmoney.credit.loan.domain.LoanRepaymentState" >
    insert into LOAN_REPAYMENT_STATE (ID, LOAN_ID, REPORT_MONTH, 
      REPORT_TERM, CURRENT_TERM, STATE, 
      MEMO, CREATE_TIME, CREATOR, 
      UPDATE_TIME, UPDATOR)
    values (#{id,jdbcType=DECIMAL}, #{loanId,jdbcType=DECIMAL}, #{reportMonth,jdbcType=VARCHAR}, 
      #{reportTerm,jdbcType=DECIMAL}, #{currentTerm,jdbcType=DECIMAL}, #{state,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zdmoney.credit.loan.domain.LoanRepaymentState" >
    insert into LOAN_REPAYMENT_STATE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="loanId != null" >
        LOAN_ID,
      </if>
      <if test="reportMonth != null" >
        REPORT_MONTH,
      </if>
      <if test="reportTerm != null" >
        REPORT_TERM,
      </if>
      <if test="currentTerm != null" >
        CURRENT_TERM,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updator != null" >
        UPDATOR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=DECIMAL},
      </if>
      <if test="reportMonth != null" >
        #{reportMonth,jdbcType=VARCHAR},
      </if>
      <if test="reportTerm != null" >
        #{reportTerm,jdbcType=DECIMAL},
      </if>
      <if test="currentTerm != null" >
        #{currentTerm,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdmoney.credit.loan.domain.LoanRepaymentState" >
    update LOAN_REPAYMENT_STATE
    <set >
      <if test="loanId != null" >
        LOAN_ID = #{loanId,jdbcType=DECIMAL},
      </if>
      <if test="reportMonth != null" >
        REPORT_MONTH = #{reportMonth,jdbcType=VARCHAR},
      </if>
      <if test="reportTerm != null" >
        REPORT_TERM = #{reportTerm,jdbcType=DECIMAL},
      </if>
      <if test="currentTerm != null" >
        CURRENT_TERM = #{currentTerm,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        UPDATOR = #{updator,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdmoney.credit.loan.domain.LoanRepaymentState" >
    update LOAN_REPAYMENT_STATE
    set LOAN_ID = #{loanId,jdbcType=DECIMAL},
      REPORT_MONTH = #{reportMonth,jdbcType=VARCHAR},
      REPORT_TERM = #{reportTerm,jdbcType=DECIMAL},
      CURRENT_TERM = #{currentTerm,jdbcType=DECIMAL},
      STATE = #{state,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATOR = #{creator,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATOR = #{updator,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="findHisLoans" resultType="java.lang.Long" parameterType="java.util.Map">
  	SELECT T.ID AS LOAN_ID
	  FROM V_LOAN_INFO T
	 WHERE T.LOAN_STATE IN ('正常', '逾期', '结清', '预结清')
	   AND T.GRANT_MONEY_DATE &lt; trunc(#{currDate},'MM')
	   AND NOT EXISTS (SELECT 1
	          FROM LOAN_REPAYMENT_STATE R
	         WHERE R.LOAN_ID = T.ID
	           AND R.STATE = 'C')
  </select>
  <select id="findReportTerm" resultType="java.lang.Long" parameterType="java.util.Map">
  	select (round(months_between(to_date(extract(year from
                                             trunc(LAST_DAY(ADD_MONTHS(#{currDate},
                                                                       -1)))) || '/' ||
                                     extract(month from
                                             trunc(LAST_DAY(ADD_MONTHS(#{currDate},
                                                                       -1)))) || '/' ||
                                     t.PROMISE_RETURN_DATE,
                                     'yyyy-MM-dd'),
                             tt.return_date)) + 1)
	  from loan_contract t, loan_repayment_detail tt
	 where t.loan_id = #{loanId}
	   and t.loan_id = tt.loan_id
	   and tt.current_term = 1
  </select>
  
  <select id="findFinishDate" parameterType="java.util.Map" resultType="java.util.Date">
	  select t1.fact_return_date
		  from loan_repayment_detail t1
		  left join v_loan_info t2
		    on t1.loan_id = t2.id
		 where t1.current_term = t2.TIME
		   and t2.LOAN_STATE = '结清'
		   and t1.loan_id = #{loanId}
  </select>
  
  <select id="findOverdueDate" parameterType="java.util.Map" resultType="java.util.Date">
  	select min(a.return_date) as return_date
	  from (select t.loan_id,
	               t.current_term,
	               t.return_date,
	               t.fact_return_date,
	               case
	                 when t.fact_return_date is null then
	                  trunc(#{currDate}, 'mm')
	                 else
	                  t.fact_return_date
	               end as report_date,
	               to_date(to_char(add_months(trunc(#{currDate}),-1),'yyyy-MM-') || to_char(t.return_date, 'dd'),
	                       'yyyy-MM-dd') as return_month
	          from loan_repayment_detail t
	         where t.loan_id = #{loanId}
	           and t.return_date &lt; trunc(#{currDate}, 'mm') --统计时间：当前月第一天
	           and (t.return_date &lt; t.fact_return_date or
	               t.fact_return_date is null)) a
	 where a.report_date > a.return_month
  </select>
  
  <select id="findRepayTerm" parameterType="java.util.Map" resultType="java.lang.Long">
  	select min(current_term)
              from loan_repayment_detail
             where loan_id = #{loanId}
               and return_date > trunc(LAST_DAY(ADD_MONTHS(#{currDate}, -1)))
  </select>
  
  <delete id="deleteByReportMonth" parameterType="java.util.Map">
  	delete from LOAN_REPAYMENT_STATE where REPORT_MONTH=#{reportMonth}
  </delete>
</mapper>