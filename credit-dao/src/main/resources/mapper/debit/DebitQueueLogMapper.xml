<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdmoney.credit.debit.domain.DebitQueueLogMapper" >
  <resultMap id="BaseResultMap" type="com.zdmoney.credit.debit.domain.DebitQueueLog" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="LOAN_ID" property="loanId" jdbcType="DECIMAL" />
    <result column="TRADE_NO" property="tradeNo" jdbcType="VARCHAR" />
    <result column="DEBIT_NOTIFY_STATE" property="debitNotifyState" jdbcType="VARCHAR" />
    <result column="DEBIT_RESULT_STATE" property="debitResultState" jdbcType="VARCHAR" />
    <result column="DEBIT_TYPE" property="debitType" jdbcType="VARCHAR" />
    <result column="DEBIT_NO" property="debitNo" jdbcType="VARCHAR" />
    <result column="DEBIT_NOTIFY_DATE" property="debitNotifyDate" jdbcType="TIMESTAMP" />
    <result column="DEBIT_RESULT_DATE" property="debitResultDate" jdbcType="TIMESTAMP" />
    <result column="BATCH_ID" property="batchId" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATOR" property="updator" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="PAY_PARTY" property="payParty" jdbcType="VARCHAR" />
    <result column="REPAY_TYPE" property="repayType" jdbcType="VARCHAR" />
    <result column="DEBIT_TRANSACTION_ID" property="debitTransactionId" jdbcType="DECIMAL" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="REPAY_TERM" property="repayTerm" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap id="debitManagementMap" type="com.zdmoney.credit.repay.vo.DebitQueueManagementVo" >
  	<result column="debitId" property="debitId" jdbcType="DECIMAL" />
  	<result column="loanId" property="loanId" jdbcType="DECIMAL" />
    <result column="custName" property="custName" jdbcType="VARCHAR" />
    <result column="idNum" property="idNum" jdbcType="VARCHAR" />
    <result column="contractNum" property="contractNum" jdbcType="VARCHAR" />
    <result column="debitNotifyState" property="debitNotifyState" jdbcType="VARCHAR" />
    <result column="debitResultState" property="debitResultState" jdbcType="VARCHAR" />
    <result column="debitType" property="debitType" jdbcType="VARCHAR" />
    <result column="payParty" property="payParty" jdbcType="VARCHAR" />
    <result column="repayType" property="repayType" jdbcType="VARCHAR" />
    <result column="batchId" property="batchId" jdbcType="VARCHAR" />
    <result column="debitNo" property="debitNo" jdbcType="VARCHAR" />
    <result column="deductStartDate" property="deductStartDate" jdbcType="VARCHAR" />
    <result column="deductEndDate" property="deductEndDate" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR"/>
    <result column="repayTerm" property="repayTerm" jdbcType="DECIMAL" />
    <result column="frozenAmount" property="frozenAmount" jdbcType="DECIMAL" />
    <result column="returnTime" property="returnTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, 
    LOAN_ID, 
    TRADE_NO, 
    DEBIT_NOTIFY_STATE, 
    DEBIT_RESULT_STATE, 
    DEBIT_TYPE, 
    DEBIT_NO, 
    DEBIT_NOTIFY_DATE, 
    DEBIT_RESULT_DATE, 
    BATCH_ID, 
    CREATOR, 
    CREATE_TIME, 
    UPDATOR, 
    UPDATE_TIME,
    AMOUNT,
    PAY_PARTY,
    REPAY_TYPE,
    DEBIT_TRANSACTION_ID,
    MEMO,
    REPAY_TERM
  </sql>
  
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from DEBIT_QUEUE_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="delete" parameterType="java.lang.Long" >
    delete from DEBIT_QUEUE_LOG
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  
  <insert id="insert" parameterType="com.zdmoney.credit.debit.domain.DebitQueueLog" >
    insert into DEBIT_QUEUE_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="loanId != null" >
        LOAN_ID,
      </if>
      <if test="tradeNo != null" >
        TRADE_NO,
      </if>
      <if test="debitNotifyState != null" >
        DEBIT_NOTIFY_STATE,
      </if>
      <if test="debitResultState != null" >
        DEBIT_RESULT_STATE,
      </if>
      <if test="debitType != null" >
        DEBIT_TYPE,
      </if>
      <if test="debitNo != null" >
        DEBIT_NO,
      </if>
      <if test="debitNotifyDate != null" >
        DEBIT_NOTIFY_DATE,
      </if>
      <if test="debitResultDate != null" >
        DEBIT_RESULT_DATE,
      </if>
      <if test="batchId != null" >
        BATCH_ID,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updator != null" >
        UPDATOR,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="payParty != null" >
        pay_party,
      </if>
      <if test="repayType != null" >
        repay_type,
      </if>
      <if test="debitTransactionId != null" >
        DEBIT_TRANSACTION_ID,
      </if>
      <if test="repayTerm != null" >
        REPAY_TERM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="debitNotifyState != null" >
        #{debitNotifyState,jdbcType=VARCHAR},
      </if>
      <if test="debitResultState != null" >
        #{debitResultState,jdbcType=VARCHAR},
      </if>
      <if test="debitType != null" >
        #{debitType,jdbcType=VARCHAR},
      </if>
      <if test="debitNo != null" >
        #{debitNo,jdbcType=VARCHAR},
      </if>
      <if test="debitNotifyDate != null" >
        #{debitNotifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="debitResultDate != null" >
        #{debitResultDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null" >
        #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payParty != null" >
        #{payParty,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null" >
        #{repayType,jdbcType=VARCHAR},
      </if>
      <if test="debitTransactionId != null" >
        #{debitTransactionId,jdbcType=DECIMAL},
      </if>
      <if test="repayTerm != null" >
        #{repayTerm,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.zdmoney.credit.debit.domain.DebitQueueLog" >
    update DEBIT_QUEUE_LOG
    <set >
      <if test="loanId != null" >
        LOAN_ID = #{loanId,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null" >
        TRADE_NO = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="debitNotifyState != null" >
        DEBIT_NOTIFY_STATE = #{debitNotifyState,jdbcType=VARCHAR},
      </if>
      <if test="debitResultState != null" >
        DEBIT_RESULT_STATE = #{debitResultState,jdbcType=VARCHAR},
      </if>
      <if test="debitType != null" >
        DEBIT_TYPE = #{debitType,jdbcType=VARCHAR},
      </if>
      <if test="debitNo != null" >
        DEBIT_NO = #{debitNo,jdbcType=VARCHAR},
      </if>
      <if test="debitNotifyDate != null" >
        DEBIT_NOTIFY_DATE = #{debitNotifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="debitResultDate != null" >
        DEBIT_RESULT_DATE = #{debitResultDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null" >
        BATCH_ID = #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        UPDATOR = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=TIMESTAMP},
      </if>
      <if test="payParty != null" >
        PAY_PARTY = #{payParty,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null" >
        REPAY_TYPE = #{repayType,jdbcType=VARCHAR},
      </if>
      <if test="debitTransactionId != null" >
        DEBIT_TRANSACTION_ID = #{debitTransactionId,jdbcType=DECIMAL},
      </if>
      <if test="repayTerm != null" >
        REPAY_TERM = #{repayTerm,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>

	<sql id="debitQueueLogSelective">
		SELECT
		<include refid="Base_Column_List" />
		FROM DEBIT_QUEUE_LOG
	</sql>

	<sql id="debitQueueLogConditions">
		<trim prefix="where" prefixOverrides="and">
			<if test="id != null">
				AND DEBIT_QUEUE_LOG.ID= #{id}
			</if>
			<if test="ids != null">
				AND DEBIT_QUEUE_LOG.ID IN 
				<foreach collection="ids" open="(" close=")" separator="," item="debitId">#{debitId}</foreach>
			</if>
			<if test="debitNos != null">
				AND DEBIT_QUEUE_LOG.debit_no IN 
				<foreach collection="debitNos" open="(" close=")" separator="," item="serialNo">#{serialNo}</foreach>
			</if>
			<if test="loanIds != null">
				AND DEBIT_QUEUE_LOG.loan_id IN 
				<foreach collection="loanIds" open="(" close=")" separator="," item="lid">#{lid}</foreach>
			</if>
			<if test="loanId != null ">
				AND DEBIT_QUEUE_LOG.LOAN_ID = #{loanId}
			</if>
            <if test="repayTerm != null ">
                AND DEBIT_QUEUE_LOG.REPAY_TERM = #{repayTerm}
            </if>
			<if test="debitType != null and debitType != ''">
				AND DEBIT_QUEUE_LOG.DEBIT_TYPE = #{debitType}
			</if>
			<!-- 时间小于当天时间，只推送小于今天的数据给陆金所，进行划扣 -->
			<if test="createDate != null and createDate != ''">
				AND DEBIT_QUEUE_LOG.CREATE_TIME &lt; to_date(#{createDate},'yyyy-mm-dd')
			</if>
			<if test="currentDay != null and currentDay != ''">
                AND TO_CHAR(DEBIT_QUEUE_LOG.CREATE_TIME,'yyyy-MM-dd') = #{currentDay}
            </if>
			<if test="createTime != null ">
				AND TRUNC(DEBIT_QUEUE_LOG.CREATE_TIME) = TRUNC(#{createTime})
			</if>
			<if test="tradeNo != null and tradeNo != ''">
				AND DEBIT_QUEUE_LOG.TRADE_NO = #{tradeNo}
			</if>
			<if test="debitNo != null and debitNo != ''">
				AND DEBIT_QUEUE_LOG.DEBIT_NO = #{debitNo}
			</if>
			<if test="debitNotifyStates != null">
				AND DEBIT_QUEUE_LOG.DEBIT_NOTIFY_STATE IN 
				<foreach collection="debitNotifyStates" item="debitNotifyStatee" open="(" close=")" separator=",">
					#{debitNotifyStatee}
				</foreach>
			</if>
			<if test="debitResultState != null and debitResultState != ''">
				AND DEBIT_QUEUE_LOG.DEBIT_RESULT_STATE = #{debitResultState}
			</if>
			<if test="debitResultStates != null">
				AND DEBIT_QUEUE_LOG.DEBIT_RESULT_STATE IN 
				<foreach collection="debitResultStates" item="debitResultStatee" open="(" close=")" separator=",">
					#{debitResultStatee}
				</foreach>
			</if>
			<if test="payPartys != null ">
				AND DEBIT_QUEUE_LOG.PAY_PARTY IN
				<foreach collection="payPartys" item="payPartyy" open="(" close=")" separator=",">
					#{payPartyy}
				</foreach>
			</if>
			<if test="payParty != null and payParty != ''">
				AND DEBIT_QUEUE_LOG.PAY_PARTY = #{payParty}
			</if>
			
			<if test="repayType != null and repayType != ''">
				AND DEBIT_QUEUE_LOG.REPAY_TYPE = #{repayType}
			</if>
			<if test="repayTypes != null ">
				AND DEBIT_QUEUE_LOG.REPAY_TYPE IN
				<foreach collection="repayTypes" item="repayTypee" open="(" close=")" separator=",">
					#{repayTypee}
				</foreach>
			</if>
			<if test="debitIds != null ">
				AND DEBIT_QUEUE_LOG.ID IN 
				<foreach collection="debitIds" item="debitId" open="(" close=")" separator=",">
					#{debitId}
				</foreach>
			</if>
		</trim>
        order by DEBIT_QUEUE_LOG.ID
	</sql>

	<select id="findListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		<include refid="debitQueueLogSelective" />
		<include refid="debitQueueLogConditions" />
	</select>
	
	<select id="findListByVO" parameterType="com.zdmoney.credit.debit.domain.DebitQueueLog" resultMap="BaseResultMap">
		<include refid="debitQueueLogSelective" />
		<include refid="debitQueueLogConditions" />
	</select>
	
	<select id="updateDebitQueueLogAfterGetDeductResultNotifyFromLufax" parameterType="java.util.Map" resultMap="BaseResultMap">
		UPDATE DEBIT_QUEUE_LOG D SET 
		   		<if test="debitResultState != null">
					D.DEBIT_RESULT_STATE = #{debitResultState,jdbcType=VARCHAR},
				</if>
			    D.DEBIT_RESULT_DATE = SYSDATE,
		        D.UPDATE_TIME  = SYSDATE
	 	<where>
			<if test="debitNo != null">
				D.debit_no = #{debitNo, jdbcType=DECIMAL}
			</if>
	 	</where>
	</select>
	
	<select id="searchDebitQueueManagementCount" parameterType="com.zdmoney.credit.repay.vo.DebitQueueManagementVo" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM (<include refid="searchDebitQueueManagement" />)
    </select>
    <!-- 查询第三方线下放款页面需要展示的信息 -->
    <select id="searchDebitQueueManagementResult" parameterType="com.zdmoney.credit.repay.vo.DebitQueueManagementVo" resultMap="debitManagementMap">
        <include refid="com.ezendai.credit2.mapper.BaseMapper.pagerStart" />
        <include refid="searchDebitQueueManagement" />
        <include refid="com.ezendai.credit2.mapper.BaseMapper.OrderBy" />
        <include refid="com.ezendai.credit2.mapper.BaseMapper.pagerEnd" />
    </select>

    <sql id="searchDebitQueueManagement">
        select l.id as "debitId",
               p.name as "custName",
               p.idnum as "idNum",
               b.contract_num as "contractNum",
               l.batch_id as "batchId",
               l.debit_no as "debitNo",
               l.loan_id as "loanId",
               l.memo as "memo",
               to_char(l.create_time, 'yyyy-MM-dd HH24:mi:ss') as "deductTime",
               l.debit_notify_state as "debitNotifyState",
               l.debit_result_state as "debitResultState",
               l.debit_type as "debitType",
               l.repay_type as "repayType",
               l.pay_party as "payParty",
               l.amount as "amount",
               l.repay_term as "repayTerm",
               l.trade_no as "tradeNo",
               (select s.frozen_amount
                  from split_queue_log s
                 where s.debit_no = l.debit_no
                   and rownum = 1) as "frozenAmount",
                case
                    when l.repay_type = '02' then
                       (select d.res_time
                          from debit_transaction d
                         where d.id = l.debit_transaction_id
                           and rownum = 1)
                      else
                       (select s.create_time
                          from split_queue_log s
                         where s.debit_no = l.debit_no
                           and rownum = 1)
                end as "returnTime"
          from debit_queue_log l, loan_base b, person_info p
         where l.loan_id = b.id
           and b.borrower_id = p.id
            <if test="custName != null and custName != ''">
                and p.name LIKE #{custName} || '%'
            </if>
            <if test="idNum != null and idNum != ''">
                and p.idnum = #{idNum}
            </if>
            <if test="contractNum != null and contractNum != ''">
                and b.contract_num = #{contractNum}
            </if>
            <if test="debitNotifyState != null and debitNotifyState != ''">
                and l.debit_notify_state = #{debitNotifyState}
            </if>
            <if test="debitResultState != null and debitResultState != ''">
                and l.debit_result_state = #{debitResultState}
            </if>
            <if test="repayType != null and repayType != ''">
                and l.repay_type = #{repayType}
            </if>
            <if test="payParty != null and payParty != ''">
                and l.pay_Party = #{payParty}
            </if>
            <if test="deductStartDate != null and deductStartDate != ''">
                and l.create_time >= to_date(#{deductStartDate},'yyyy-MM-dd')
            </if>
            <if test="deductEndDate != null and deductEndDate != ''">
                and l.create_time &lt; to_date(#{deductEndDate},'yyyy-MM-dd')+1
            </if>
            <if test="batchId != null and batchId != ''">
                and l.batch_id = #{batchId}
            </if>
            <if test="debitNo != null and debitNo != ''">
                and l.debit_no = #{debitNo}
            </if>
    </sql>
  
    <select id="findTradeDateByDebitNo" parameterType="java.util.Map" resultType="java.util.Map">
      select to_char(max(o.trade_date),'yyyy-mm-dd') as "tradeDate"
        from offer_repay_info o, debit_queue_log d
       where o.trade_no = d.trade_no
       <if test="debitNo != null ">
         and d.debit_no = #{debitNo}
       </if>
    </select>
    
    <!-- 查询一笔还款当期所在期数 -->
    <select id="getRepaymentCurrentTerm" parameterType="java.util.Map" resultType="java.lang.Long">
        select min(t.current_term) as current_term
          from loan_repayment_detail t
         where t.loan_id = #{loanId}
           and t.return_date >= trunc(#{repayDate})
    </select>
    
    <!-- 查询逾期还款对应的起始期数和截止期数，不包含当期 -->
    <select id="getOverdueRepaymentTerm" parameterType="java.util.Map" resultType="java.util.Map">
        select min(to_number(t.memo2)) as min_term,
               max(to_number(t.memo2)) as max_term
          from offer_flow t
         where t.trade_no = #{tradeNo}
           and t.trade_code in ('1001', '3001')
           and t.acct_title in ('451', '211', '452')
           and t.account &lt;> 'ZD0000001090000002'
           <if test="currentTerm != null and currentTerm != ''">
             and to_number(t.memo2) &lt; #{currentTerm}
           </if>
           <if test="lastTerm != null and lastTerm != ''">
             and to_number(t.memo2) &lt;= #{lastTerm}
           </if>
    </select>
    
    <!-- 查询还款类型为委托代扣03和逾期代偿01的划扣记录  -->
    <select id="findEntrustAndOverdueDebit" parameterType="java.util.Map"  resultMap="BaseResultMap">
    	SELECT D.*
    	FROM DEBIT_QUEUE_LOG D, COMPENSATORY_DETAIL_LUFAX C
    	WHERE D.ID = C.DEBIT_QUEUE_ID 
			AND D.REPAY_TYPE IN ('01','03')
			AND D.DEBIT_RESULT_STATE IN ('1','3')
			AND C.TYPE IN ('01','03')
			AND NOT EXISTS (SELECT 1 FROM DEBIT_QUEUE_LOG Q WHERE D.LOAN_ID = 
				Q.LOAN_ID AND D.REPAY_TERM = Q.REPAY_TERM AND Q.REPAY_TYPE = '05')
			 	<!-- 准备金划扣时间判断、reserveDebitDate传系统时间 -->
	       <if test="reserveDebitDate != null">
	        	AND C.CREATE_TIME >= trunc(#{reserveDebitDate})
	       </if>
	      		<!-- 保证金划扣时间判断、depositDebitDate传系统时间 -->
	       <if test="depositDebitDate != null">
	        	AND C.CREATE_TIME &lt; trunc(#{depositDebitDate})
	       </if>
    </select>
    
    <!-- 查询还款类型为委托代扣01和提前结清05的划扣记录   -->
    <select id="findEntrustAndAdvanceClearDebit" parameterType="java.util.Map"  resultMap="BaseResultMap">
    	SELECT D.*
    	FROM DEBIT_QUEUE_LOG D
    	WHERE D.REPAY_TYPE IN ('01','05')
				AND D.DEBIT_RESULT_STATE IN ('1','3')
			 AND EXISTS (SELECT 1  FROM DEBIT_QUEUE_LOG Q  WHERE 
			 	D.LOAN_ID = Q.LOAN_ID AND D.REPAY_TERM = Q.REPAY_TERM AND Q.REPAY_TYPE = '05')
    </select>
</mapper>